/* VS Code 风格网格线条样式 */
/* 适用于 Obsidian 笔记编辑线 - VS Code 编程风格 */
/* 修复：限制网格线条只在编辑器内容区域显示，避免在编辑器外出现多余横线 */

/* 内容容器定位 */
.cm-contentContainer {
  position: relative; /* 为伪元素定位做准备 */
}

/* 确保只在编辑器内容区域显示网格 */
.cm-editor .cm-contentContainer {
  position: relative; /* 为伪元素定位做准备 */
}

/* ===== 横线网格 - VS Code 编程风格 ===== */
/* 使用伪元素添加横线，与 VS Code 深色主题兼容 */
/* 限制只在编辑器内容区域显示横线 */
.cm-contentContainer:has(.cm-content)::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(0deg, transparent 0%, transparent calc(24px - 1px), rgba(0, 122, 204, 0.15) calc(24px - 1px), rgba(0, 122, 204, 0.15) 24px);
  background-size: 100% 24px;
  background-position: 0 0;
  background-repeat: repeat;
  pointer-events: none; /* 不影响鼠标事件 */
  z-index: 1; /* 在背景之上，但在内容之下 */
}

/* 备用方案：如果 :has() 不支持，使用更具体的选择器 */
.cm-editor .cm-contentContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(0deg, transparent 0%, transparent calc(24px - 1px), rgba(0, 122, 204, 0.15) calc(24px - 1px), rgba(0, 122, 204, 0.15) 24px);
  background-size: 100% 24px;
  background-position: 0 0;
  background-repeat: repeat;
  pointer-events: none; /* 不影响鼠标事件 */
  z-index: 1; /* 在背景之上，但在内容之下 */
}

/* 编辑内容区域 */
.cm-content {
  background: transparent;
  line-height: 24px;
  padding: 20px 10px 20px 0;
  min-height: 100vh;
  position: relative;
  z-index: 1;
  margin-right: 20px;
}

/* 移除 .cm-content 的横线背景，因为现在通过伪元素实现 */
.cm-content {
  background: transparent;
}

/* 微调横线位置，确保与文本行完美对齐 */
.cm-line {
  background: transparent;
  padding: 0 2px;
  margin-bottom: 0;
  position: relative;
  z-index: 3;
  line-height: 24px;
}

/* 光标样式 - VS Code 风格 */
.cm-cursor {
  border-left: 2px solid #007acc;
  background: rgba(0, 122, 204, 0.15);
}

/* 选中文本样式 - VS Code 风格 */
.cm-selectionBackground {
  background: rgba(0, 122, 204, 0.2);
}

/* 代码块和引用块保持原有背景 */
.cm-content .cm-block.cm-code,
.cm-content .cm-block.cm-quote {
  background: inherit;
  background-image: none;
}

/* 表格保持原有背景 */
.cm-content .cm-table {
  background: inherit;
  background-image: none;
}

/* 行号区域样式 - VS Code 风格 */
.cm-gutters {
  background: rgba(0, 122, 204, 0.02);
  border-right: none;
  position: relative;
}

.cm-gutters::after {
  content: '';
  position: absolute;
  top: 0;
  right: calc(100% - 33px);
  bottom: 0;
  width: 1px;
  background: rgba(0, 122, 204, 0.2);
}

/* 行号文本样式 */
.cm-gutterElement {
  padding: 0 8px 0 4px;
  color: rgba(0, 122, 204, 0.6);
  font-size: 12px;
  line-height: 24px;
  text-align: right;
  font-weight: 400;
  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
}

/* 响应式调整 */
@media (max-width: 768px) {
  .cm-content {
    line-height: 20px;
    padding: 15px 8px 15px 0;
    margin-right: 15px;
  }
  
  .cm-contentContainer::before {
    background-size: 100% 20px;
    background-position: 0 0;
  }
}



/* ===== 点状网格 - VS Code 编程风格 ===== */
/* 点状网格变体 - 参考 VS Code 编程风格 */
.cm-contentContainer:has(.cm-content).vscode-dots::before {
  background-image: 
    radial-gradient(
      circle at 50% 50%,
      rgba(0, 122, 204, 0.2) 0.6px,
      transparent 0.6px
    );
  background-size: 24px 24px;
  background-position: 0 0;
}

/* 备用方案 */
.cm-editor .cm-contentContainer.vscode-dots::before {
  background-image: 
    radial-gradient(
      circle at 50% 50%,
      rgba(0, 122, 204, 0.2) 0.6px,
      transparent 0.6px
    );
  background-size: 24px 24px;
  background-position: 0 0;
}



/* ===== 虚线网格 - VS Code 编程风格 ===== */
/* 虚线网格变体 - 参考 VS Code 编程风格 */
.cm-contentContainer:has(.cm-content).vscode-dashed::before {
  background-image: 
    linear-gradient(0deg, 
      transparent 0%, 
      transparent calc(24px - 1px), 
      rgba(0, 122, 204, 0.15) calc(24px - 1px), 
      rgba(0, 122, 204, 0.15) calc(24px - 0.5px),
      transparent calc(24px - 0.5px),
      transparent 24px);
  background-size: 100% 24px;
  background-position: 0 0;
}

/* 备用方案 */
.cm-editor .cm-contentContainer.vscode-dashed::before {
  background-image: 
    linear-gradient(0deg, 
      transparent 0%, 
      transparent calc(24px - 1px), 
      rgba(0, 122, 204, 0.15) calc(24px - 1px), 
      rgba(0, 122, 204, 0.15) calc(24px - 0.5px),
      transparent calc(24px - 0.5px),
      transparent 24px);
  background-size: 100% 24px;
  background-position: 0 0;
}



/* ===== 浅色主题适配 ===== */
/* 浅色主题下的横线网格 */
.theme-light .cm-contentContainer:has(.cm-content)::before {
  background-image: 
    linear-gradient(0deg, transparent 0%, transparent calc(24px - 1px), rgba(0, 122, 204, 0.1) calc(24px - 1px), rgba(0, 122, 204, 0.1) 24px);
}

/* 备用方案 */
.theme-light .cm-editor .cm-contentContainer::before {
  background-image: 
    linear-gradient(0deg, transparent 0%, transparent calc(24px - 1px), rgba(0, 122, 204, 0.1) calc(24px - 1px), rgba(0, 122, 204, 0.1) 24px);
}

/* 浅色主题下的光标样式 */
.theme-light .cm-cursor {
  border-left: 2px solid #007acc;
  background: rgba(0, 122, 204, 0.1);
}

/* 浅色主题下的选中文本样式 */
.theme-light .cm-selectionBackground {
  background: rgba(0, 122, 204, 0.15);
}

/* 浅色主题下的行号区域样式 */
.theme-light .cm-gutters {
  background: rgba(0, 122, 204, 0.01);
}

.theme-light .cm-gutters::after {
  background: rgba(0, 122, 204, 0.1);
}

/* 浅色主题下的行号文本样式 */
.theme-light .cm-gutterElement {
  color: rgba(0, 122, 204, 0.4);
}

/* 浅色主题下的点状网格 */
.theme-light .cm-contentContainer:has(.cm-content).vscode-dots::before {
  background-image: 
    radial-gradient(
      circle at 50% 50%,
      rgba(0, 122, 204, 0.1) 0.6px,
      transparent 0.6px
    );
}

/* 备用方案 */
.theme-light .cm-editor .cm-contentContainer.vscode-dots::before {
  background-image: 
    radial-gradient(
      circle at 50% 50%,
      rgba(0, 122, 204, 0.1) 0.6px,
      transparent 0.6px
    );
}

/* 浅色主题下的虚线网格 */
.theme-light .cm-contentContainer:has(.cm-content).vscode-dashed::before {
  background-image: 
    linear-gradient(0deg, 
      transparent 0%, 
      transparent calc(24px - 1px), 
      rgba(0, 122, 204, 0.1) calc(24px - 1px), 
      rgba(0, 122, 204, 0.1) calc(24px - 0.5px),
      transparent calc(24px - 0.5px),
      transparent 24px);
}

/* 备用方案 */
.theme-light .cm-editor .cm-contentContainer.vscode-dashed::before {
  background-image: 
    linear-gradient(0deg, 
      transparent 0%, 
      transparent calc(24px - 1px), 
      rgba(0, 122, 204, 0.1) calc(24px - 1px), 
      rgba(0, 122, 204, 0.1) calc(24px - 0.5px),
      transparent calc(24px - 0.5px),
      transparent 24px);
}



/* ===== 编程风格增强 ===== */
/* 语法高亮增强 - 参考 VS Code 语法高亮 */
.cm-content .cm-header {
  color: #007acc;
  font-weight: bold;
}

.cm-content .cm-header-1 {
  color: #007acc;
  font-size: 1.5em;
}

.cm-content .cm-header-2 {
  color: #0066cc;
  font-size: 1.3em;
}

.cm-content .cm-header-3 {
  color: #0052a3;
  font-size: 1.1em;
}

/* 代码语法高亮 */
.cm-content .cm-keyword {
  color: #569cd6;
  font-weight: bold;
}

.cm-content .cm-string {
  color: #ce9178;
}

.cm-content .cm-number {
  color: #b5cea8;
}

.cm-content .cm-comment {
  color: #6a9955;
  font-style: italic;
}

.cm-content .cm-variable {
  color: #9cdcfe;
}

.cm-content .cm-property {
  color: #9cdcfe;
}

.cm-content .cm-operator {
  color: #d4d4d4;
}

/* 浅色主题下的语法高亮 */
.theme-light .cm-content .cm-header {
  color: #007acc;
}

.theme-light .cm-content .cm-header-1 {
  color: #007acc;
}

.theme-light .cm-content .cm-header-2 {
  color: #0066cc;
}

.theme-light .cm-content .cm-header-3 {
  color: #0052a3;
}

.theme-light .cm-content .cm-keyword {
  color: #0000ff;
}

.theme-light .cm-content .cm-string {
  color: #a31515;
}

.theme-light .cm-content .cm-number {
  color: #098658;
}

.theme-light .cm-content .cm-comment {
  color: #008000;
}

.theme-light .cm-content .cm-variable {
  color: #001080;
}

.theme-light .cm-content .cm-property {
  color: #001080;
}

.theme-light .cm-content .cm-operator {
  color: #000000;
}

 